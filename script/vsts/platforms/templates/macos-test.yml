steps:
  - task: DownloadBuildArtifacts@0
    displayName: Download atom-mac.zip
    inputs:
      artifactName: 'atom-mac.zip'
      downloadPath: $(Build.SourcesDirectory)

  - script: unzip atom-mac.zip/atom-mac.zip -d out
    displayName: Unzip atom-mac.zip

  - task: DownloadBuildArtifacts@0
    displayName: Download atom-mac-symbols.zip
    inputs:
      artifactName: 'atom-mac-symbols.zip'
      downloadPath: $(Build.SourcesDirectory)

  - script: unzip atom-mac-symbols.zip/atom-mac-symbols.zip -d out
    displayName: Unzip atom-mac-symbols.zip

  - script: |
      osascript -e 'tell application "System Events" to keystroke "x"' # clear screen saver
      caffeinate -s script/test # Run with caffeinate to prevent screen saver
    env:
      CI: true
      CI_PROVIDER: VSTS
      ATOM_JASMINE_REPORTER: list
      TEST_JUNIT_XML_ROOT: $(Common.TestResultsDirectory)/junit
      ATOM_RUN_CORE_TESTS: $(RunCoreTests)
      ATOM_RUN_PACKAGE_TESTS: $(RunPackageTests)
    displayName: Run tests
    condition: and(succeeded(), ne(variables['Atom.SkipTests'], 'true'))

  - script: script/postprocess-junit-results --search-folder "${TEST_JUNIT_XML_ROOT}" --test-results-files "**/*.xml"
    env:
      TEST_JUNIT_XML_ROOT: $(Common.TestResultsDirectory)/junit
    displayName: Post-process test results
    condition: ne(variables['Atom.SkipTests'], 'true')

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: JUnit
      searchFolder: $(Common.TestResultsDirectory)/junit
      testResultsFiles: '**/*.xml'
      mergeTestResults: true
      testRunTitle: MacOS
    condition: ne(variables['Atom.SkipTests'], 'true')

  - script: |
      mkdir -p $(Build.ArtifactStagingDirectory)/crash-reports
      cp ${HOME}/Library/Logs/DiagnosticReports/*.crash $(Build.ArtifactStagingDirectory)/crash-reports
    displayName: Stage Crash Reports
    condition: failed()

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)/crash-reports
      ArtifactName: crash-reports.zip
    displayName: Upload Crash Reports
    condition: failed()
